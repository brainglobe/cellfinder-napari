name: Test (and Deploy on tag)

on:
  # Only run on pushes to main, or when version tags are pushed
  push:
    branches:
      - 'main'
    tags:
      - 'v**'
  # Run on all pull-requests
  pull_request:
  # Allow workflow dispatch from GitHub
  workflow_dispatch:

concurrency:
  # Cancel this workflow if it is running,
  # and then changes are applied on top of the HEAD of the branch,
  # triggering another run of the workflow
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/lint@v2

  manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/check_manifest@v2

  test:
    needs: [linting, manifest]
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Run all supported Python versions on linux
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
        # Include one windows and macos run
        include:
        - os: macos-latest
          python-version: "3.10"
        - os: windows-latest
          python-version: "3.10"

    steps:
      # Setup VTK with headless display
      - uses: pyvista/setup-headless-display-action@v2
      # Run tests
      - uses: neuroinformatics-unit/actions/test@v2
        with:
          python-version: ${{ matrix.python-version }}
          use-xvfb: true

  build_sdist_wheels:
    name: Build source distribution
    needs: [test]
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
    - uses: neuroinformatics-unit/actions/build_sdist_wheels@v2


  upload_all:
    name: Publish build distributions
    needs: [build_sdist_wheels]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.TWINE_API_KEY }}
